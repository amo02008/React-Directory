{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12035\\\\OneDrive\\\\Desktop\\\\React-Employee-Directory\\\\src\\\\components\\\\GetUsers.jsx\";\nimport React, { Component } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class GetUsers extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: []\n    };\n    this.columns = [{\n      field: \"id\",\n      headerName: \"ID\",\n      width: 130\n    }, {\n      field: \"firstName\",\n      headerName: \"First name\",\n      width: 200\n    }, {\n      field: \"lastName\",\n      headerName: \"Last name\",\n      width: 130\n    }, {\n      field: \"email\",\n      headerName: \"Email\",\n      width: 150\n    }, {\n      field: \"phone\",\n      headerName: \"Phone\",\n      width: 130\n    }, {\n      field: \"username\",\n      headerName: \"Username\",\n      width: 130\n    }, {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 160,\n      valueGetter: params => `${params.getValue(\"firstName\") || \"\"} ${params.getValue(\"lastName\") || \"\"}`\n    }];\n  }\n\n  componentDidMount() {\n    API.getUsers().then(res => {\n      this.setState({\n        user: res.data.results.map(e => ({\n          id: e.login.uuid,\n          firstName: e.name.first,\n          lastName: e.name.last,\n          username: e.login.username,\n          email: e.email,\n          phone: e.phone\n        }))\n      }); // eslint-disable-next-line\n\n      console.log(this.state.employee);\n    }).catch(err => {\n      // eslint-disable-next-line no-unused-expressions\n      err.message;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: this.state.user,\n        columns: this.columns,\n        pageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\nAPI.getUsers().then(res => {\n  console.log(res.data.results);\n}); // const rows = [\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n// ];\n// export default GetUsers","map":{"version":3,"sources":["C:/Users/12035/OneDrive/Desktop/React-Employee-Directory/src/components/GetUsers.jsx"],"names":["React","Component","DataGrid","API","GetUsers","state","user","columns","field","headerName","width","description","sortable","valueGetter","params","getValue","componentDidMount","getUsers","then","res","setState","data","results","map","e","id","login","uuid","firstName","name","first","lastName","last","username","email","phone","console","log","employee","catch","err","message","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport API from \"../utils/API\";\r\n\r\nexport default class GetUsers extends Component {\r\n  state = {\r\n    user: [],\r\n  };\r\n\r\n  columns = [\r\n    { field: \"id\", headerName: \"ID\", width: 130 },\r\n    { field: \"firstName\", headerName: \"First name\", width: 200 },\r\n    { field: \"lastName\", headerName: \"Last name\", width: 130 },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      width: 150,\r\n    },\r\n    { field: \"phone\", headerName: \"Phone\", width: 130 },\r\n    { field: \"username\", headerName: \"Username\", width: 130 },\r\n    {\r\n      field: \"fullName\",\r\n      headerName: \"Full name\",\r\n      description: \"This column has a value getter and is not sortable.\",\r\n      sortable: false,\r\n      width: 160,\r\n      valueGetter: (params) =>\r\n        `${params.getValue(\"firstName\") || \"\"} ${\r\n          params.getValue(\"lastName\") || \"\"\r\n        }`,\r\n    },\r\n  ];\r\n\r\n  componentDidMount() {\r\n    API.getUsers()\r\n      .then((res) => {\r\n        this.setState({\r\n          user: res.data.results.map((e) => ({\r\n            id: e.login.uuid,\r\n            firstName: e.name.first,\r\n            lastName: e.name.last,\r\n            username: e.login.username,\r\n            email: e.email,\r\n            phone: e.phone,\r\n          })),\r\n        });\r\n        // eslint-disable-next-line\r\n        console.log(this.state.employee);\r\n      })\r\n      .catch((err) => {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        err.message;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <DataGrid rows={this.state.user} columns={this.columns} pageSize={10} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAPI.getUsers ().then (res => {\r\n    console.log(res.data.results)\r\n   \r\n})\r\n\r\n\r\n// const rows = [\r\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n// ];\r\n\r\n// export default GetUsers"]},"metadata":{},"sourceType":"module"}